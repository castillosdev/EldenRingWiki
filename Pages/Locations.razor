@page "/locations"
@inject LocationService LocationServiceInstance

<h3>Test Location List</h3>

<div class="row">
    <div class="col-lg-6 col-md-8 col-sm-12 mb-4">
        <input type="text" class="form-control" placeholder="Search locations..." @bind-value="searchQuery" @oninput="SearchLocations" />
    </div>
    <div class="col-lg-2 col-md-4 col-sm-12 mb-4">
        <button class="btn btn-primary btn-block" @onclick="SearchLocations">Search</button>
    </div>
</div>

@if (locations == null)
{
    <p><em>Loading...</em></p>
}
else if (locations.Any())
{
    <div class="row">
        @foreach (var location in locations)
        {
            <div class="col-lg-4 col-md-6 col-sm-12 mb-4">
                <div class="data-item px-5 max-height-400 hover-shadow">
                    <h4 class="data-item_heading mt-5">@location.Name</h4>
                    <img src="@location.Image" alt="@location.Name" class="data-item_image"/>
                    <p><strong>Description:</strong> @location.Description</p>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No locations found.</p>
}

@code {
    private IEnumerable<Location> allLocations;
    private IEnumerable<Location> locations;
    private string searchQuery;

    protected override async Task OnInitializedAsync()
    {
        allLocations = await LocationServiceInstance.GetAlllocations();
        locations = allLocations;
    }

    private void SearchLocations()
    {
        if (string.IsNullOrWhiteSpace(searchQuery))
        {
            locations = allLocations;
        }
        else
        {
            locations = allLocations.Where(l => l.Name.Contains(searchQuery, StringComparison.OrdinalIgnoreCase));
        }
    }
}
